# Workflow name
name: Backend Continuous Deployment

# Triggers for the workflow
on:
  # Manual trigger using the workflow_dispatch event
  workflow_dispatch:
  
  # Automatic trigger on merge to the main branch
  pull_request:
    branches:
      - main
    # Execute the action on closed (merged) PR.
    types: [closed]

    paths:
      - 'backend/**'

defaults:
  run:
    working-directory: ./backend

# Jobs defined in the workflow
jobs:
    backend_cd:
      runs-on: ubuntu-latest
      
      environment:
            name: development
      
      steps:
        - name: Checkout code
          uses: actions/checkout@v3

        - name: Setup Python
          uses: actions/setup-python@v5
          with:
            python-version: '3.10'
      
        - name: Install dependencies
          run: |
            pip install pipenv --user

            pipenv install
              
            pip install flake8

        - name: Runs Linting
          id: lint
          run: pipenv run lint

        - name: Runs the tests
          id: tests
          run: pipenv run test

        - name: Login to Docker Hub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}

        - name: Build the docker image
          run: |
                docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/backend:${GITHUB_SHA::7} .
                docker push ${{ secrets.DOCKERHUB_USERNAME }}/backend:${GITHUB_SHA::7}

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v4
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: us-east-1

        - name: Install kustomize
          uses: imranismail/setup-kustomize@v2

        - name: Logging into ECR to Amazon ECR
          id: ecr
          uses: aws-actions/amazon-ecr-login@v2

        - name: Configure kubeconfig file
          env:
            EKS_CLUSTER: ${{ secrets.EKS_CLUSTER }}
          run: |
                aws eks --region us-east-1 update-kubeconfig --name $EKS_CLUSTER
        
        - name: Configure image
          env:
            ECR_REGISTRY: ${{ steps.ecr.outputs.registry }}
            ECR_REPOSITORY: backend
          run: |
              cd ./k8s/
              kustomize edit set image backend=$ECR_REGISTRY/$ECR_REPOSITORY:${GITHUB_SHA::7}

        - name: Push docker image to ECR
          env:
            ECR_REGISTRY: ${{ steps.ecr.outputs.registry }}
          run: |
            docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:${GITHUB_SHA::7} .
            docker push $ECR_REGISTRY/$ECR_REPOSITORY:${GITHUB_SHA::7}

        - name: Deploy application to EKS Cluster

          run: |
              cd ./k8s/
              kustomize build | kubectl apply -f -